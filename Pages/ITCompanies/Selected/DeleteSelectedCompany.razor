@page "/DeleteSelectedCompany/{Id:guid}"
@using Project.Omega.Data.ITCompanies
@using Project.Omega.Services.ITCompanies
@inject CompaniesSpecificService _specificService
@inject CompanyGeneralService _generalService
@inject NavigationManager _navigationManager
@inject ISnackbar Snackbar

<MudPaper Class="pa-8 ma-5 mt-2" Elevation="3">
        <MudText Class="mb-2"><h1><strong>Delete </strong>@specificCompany.CompanyName</h1></MudText>
        <MudText Class="mb-2">Are you sure want to delete this company?</MudText>
        <MudCard Elevation="2" Class="mt-4 pa-4">
    <MudText><MudIcon Icon="@Icons.Material.Filled.CardMembership" Size="Size.Small" /> Registered as  @specificCompany.Id</MudText>
    <MudText><MudIcon Icon="@Icons.Filled.TravelExplore" Size="Size.Small" /> Serves to @specificCompany.AreaOfService Market</MudText>
    <MudText><MudIcon Icon="@Icons.Filled.Money" Size="Size.Small" /> Worths @specificCompany.Revenue.ToString("C")</MudText>
    <MudText><MudIcon Icon="@Icons.Filled.People" Size="Size.Small" /> Employed @specificCompany.NumberOfEmployees.ToString("N0") employee(s)</MudText>
        <MudText><MudIcon Icon="@Icons.Filled.Web" Size="Size.Small" /> Learn more by visiting <a href="@specificCompany.WebsiteLink">@specificCompany.WebsiteLink</a></MudText>
            </MudCard>
            <MudButton Class="mt-4 mr-4" OnClick="DeleteCompany" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Delete" Color="Color.Error">DELETE</MudButton>
             <MudButton Class="mt-4 mr-4" OnClick="Cancel" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Cancel" Color="Color.Default">CANCEL</MudButton>
        </MudPaper>

@code {
    [Parameter] public Guid Id { get; set; }
    Specific specificCompany = new Specific();
    General generalCompany = new General();

    protected override async Task OnInitializedAsync()
    {
        specificCompany = await Task.Run(() => _specificService.GetSpecificCompanyByIDAsync(Id));
        generalCompany = await Task.Run(() => _generalService.GetGeneralCompanyByIDAsync(Id));
    }
    protected async void DeleteCompany()
    {
        generalCompany.IsSelected = false;
        await _generalService.UpdateGeneralCompanyAsync(generalCompany);
        await _specificService.DeleteSpecificCompanyAsync(specificCompany);
        _navigationManager.NavigateTo("/SelectedCompanies");
        Snackbar.Add("Operation successfully completed", Severity.Success);
    }
    void Cancel()
    {
        _navigationManager.NavigateTo("/ViewSelectedCompany/"+specificCompany.Id);
    }
}
